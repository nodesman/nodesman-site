Article.create!([
  {title: "Making Software Is Hard", content: "A lot of project managers and those in charge of software development teams think they can squeeze out more software from engineers by throwing more of them at a problem or making them work harder. Some employ all kinds of tactics to corner engineers into making commitments and holding them to it.\r\n\r\nThey may even convert this adversarial attitude towards engineers a virtuous management tactic that every one of their peers and subordinates who also manage engineers are to emulate. Al this does is push the risk of creating software onto engineers. And that will have negative consequences. Consequences that some managers are fine with.\r\n\r\nThey attempt to reduce software development down to a menial task like every other function. You said you will take 5 days to do this. Why is it taking longer? You are not living up to your word. Creating software is not like doing wood work or making pizza – easily repeated and well understood task. Complexities arise that increase the scope of the development in ways that were not foreseen during estimation. And this happens pretty often.\r\n\r\nIf you are able to get software out of someone by cornering someone and extracting an outcome then you are compromising on something else. If you are able to get away with pushing the risk of software onto engineers time and time again, then they will likely not be around for much longer. If you want to deviate from this minimum cost something has to take a hit. There are no free lunches. It is up to you to figure out what that is. It can be code quality.\r\n\r\nIt can be sustainability – your code runs the risk of not being maintainable after a point in time. It can be risking losing your staff. It can be money and time spent in bringing in additional capacity though contractors. Writing a software application well requires that a problem is thought through well. Software development is not the act of typing. It is not the translation of something from memory into words in a text file.\r\n\r\nThe act of creating software happens in the minds of people and in their interactions with people involved in making it. It involves the careful consideration of the methodology to solve this specific problem.", show_date: false, url_slug: "making-software-is-hard", html: "<p>A lot of project managers and those in charge of software development teams think they can squeeze out more software from engineers by throwing more of them at a problem or making them work harder. Some employ all kinds of tactics to corner engineers into making commitments and holding them to it.</p>\n\n<p>They may even convert this adversarial attitude towards engineers a virtuous management tactic that every one of their peers and subordinates who also manage engineers are to emulate. Al this does is push the risk of creating software onto engineers. And that will have negative consequences. Consequences that some managers are fine with.</p>\n\n<p>They attempt to reduce software development down to a menial task like every other function. You said you will take 5 days to do this. Why is it taking longer? You are not living up to your word. Creating software is not like doing wood work or making pizza – easily repeated and well understood task. Complexities arise that increase the scope of the development in ways that were not foreseen during estimation. And this happens pretty often.</p>\n\n<p>If you are able to get software out of someone by cornering someone and extracting an outcome then you are compromising on something else. If you are able to get away with pushing the risk of software onto engineers time and time again, then they will likely not be around for much longer. If you want to deviate from this minimum cost something has to take a hit. There are no free lunches. It is up to you to figure out what that is. It can be code quality.</p>\n\n<p>It can be sustainability – your code runs the risk of not being maintainable after a point in time. It can be risking losing your staff. It can be money and time spent in bringing in additional capacity though contractors. Writing a software application well requires that a problem is thought through well. Software development is not the act of typing. It is not the translation of something from memory into words in a text file.</p>\n\n<p>The act of creating software happens in the minds of people and in their interactions with people involved in making it. It involves the careful consideration of the methodology to solve this specific problem.</p>\n"},
  {title: "CSS Grid Systems : What Are They Really?", content: "Grid systems provide value by simplifying the API to layout elements on a web page. Doing it with plain CSS and HTML is far harder and requires a better understanding of the nuances of the layout elements in HTML. The grid systems hides us from the complexity.\r\n\r\n## How I Use Grid Systems\r\n\r\nI don’t find any value in using them. I go full commando when writing front-end code. I find that I have to use a grid system only when I am maintaining software written using one before I got involved.\r\n\r\nI may include a grid system in a project if I sense that I will not be in the project for very long because I work on multiple projects in short periods of time. This means I will not be writing the layout code in said project forever. I ensure that the UI framework that I develop will play nicely with the CSS grid system that will eventually be used in my absence.\r\n\r\n\r\n## Problems with grid systems\r\n\r\nThe original intent behind the concept of a grid is to make the scanning of a web page easier. A web page designed with the base framework of a grid in place is easier to scan for the reader. So the only legitimate place for a grid is in Photoshop. Grid as a concept is a visual design paradigm.\r\n\r\nThe 12 column split + gutter system that all CSS frameworks provide in itself provide no value in simplifying laying out of web pages but provide a useful framework for how we visualize the front-end of a web page.\r\n\r\nSomewhere along the visual design paradigm was lost in translation and now the word “Grid” has come to mean almost exclusively a CSS grid system that hides the complexities of laying out an element on a screen – a convenience tool. As far as CSS frameworks go the underlying structure of 12 columns and gutter is not even the best logical break down of a flexible UI development framework.\r\n\r\nIf you have a custom visual design that is beyond a set of boxes stacked vertically and horizontally then you better not implement it using a grid framework. You will not achieve satisfactory results assuming you are trying to achieve near pixel perfect replication of the design. The grid system is an integer multiple of a certain width.\r\n\r\n## Conclusion\r\n\r\nIn the end it is what it is. Developers who are not CSS HTML/CSS Nazis like me find value in using it. Entire multimillion-dollar businesses have been built on it. If someone finds value in it then by all means you should continue using it.\r\n\r\nAnything that simplifies and hides complexity always has less flexibility than the more complex solution. Knowing where the grid systems’ limitations lie are important.\r\n", show_date: false, url_slug: "css-grid-systems", html: "<p>Grid systems provide value by simplifying the API to layout elements on a web page. Doing it with plain CSS and HTML is far harder and requires a better understanding of the nuances of the layout elements in HTML. The grid systems hides us from the complexity.</p>\n\n<h2>How I Use Grid Systems</h2>\n\n<p>I don’t find any value in using them. I go full commando when writing front-end code. I find that I have to use a grid system only when I am maintaining software written using one before I got involved.</p>\n\n<p>I may include a grid system in a project if I sense that I will not be in the project for very long because I work on multiple projects in short periods of time. This means I will not be writing the layout code in said project forever. I ensure that the UI framework that I develop will play nicely with the CSS grid system that will eventually be used in my absence.</p>\n\n<h2>Problems with grid systems</h2>\n\n<p>The original intent behind the concept of a grid is to make the scanning of a web page easier. A web page designed with the base framework of a grid in place is easier to scan for the reader. So the only legitimate place for a grid is in Photoshop. Grid as a concept is a visual design paradigm.</p>\n\n<p>The 12 column split + gutter system that all CSS frameworks provide in itself provide no value in simplifying laying out of web pages but provide a useful framework for how we visualize the front-end of a web page.</p>\n\n<p>Somewhere along the visual design paradigm was lost in translation and now the word “Grid” has come to mean almost exclusively a CSS grid system that hides the complexities of laying out an element on a screen – a convenience tool. As far as CSS frameworks go the underlying structure of 12 columns and gutter is not even the best logical break down of a flexible UI development framework.</p>\n\n<p>If you have a custom visual design that is beyond a set of boxes stacked vertically and horizontally then you better not implement it using a grid framework. You will not achieve satisfactory results assuming you are trying to achieve near pixel perfect replication of the design. The grid system is an integer multiple of a certain width.</p>\n\n<h2>Conclusion</h2>\n\n<p>In the end it is what it is. Developers who are not CSS HTML/CSS Nazis like me find value in using it. Entire multimillion-dollar businesses have been built on it. If someone finds value in it then by all means you should continue using it.</p>\n\n<p>Anything that simplifies and hides complexity always has less flexibility than the more complex solution. Knowing where the grid systems’ limitations lie are important.</p>\n"},
  {title: "Creating Websites With WordPress Is A Bad Idea", content: "Wordpress is the most popular content management system in the world. It runs almost 16% of the web. I can see why that is because it is so easy to set up.\r\n\r\nIf you are a company that has a developer on board then don't create any part of your website using wordpress. Use wordpress only if you don't have a developer on your team and you want a ready made system with pre-built features that you don't expect to evolve with your needs.\r\n\r\nThese are my reasons to avoid wordpress as the go to platform when you are considering creating a new website.\r\n\r\n## It influences how you present yourself.\r\n\r\nFirstly, wordpress started out as a blogging platform. So there are (appropriate) assumptions about your content (you will write posts), what roles are available and how they are presented (chronologically). It comes with the posts and the page types which are really for chronological content. It does a good job of that.\r\n\r\nSomething deeply ingrained in the system is the blog being a web-log the way it was back in the early 2000s. The emphasis on wordpress's presentation is in the chronological presentation of your content. Which is bad.\r\n\r\nI would even go so far as to say that even a topical blog in the sense that it is today - should not be created as just a chronological list of posts. There should be cornerstone content that you should be seen out of the context of the time it was posted and stand on its own in your content hierarchy.\r\n\r\nIf you have chronological content - the content that you consciously endorse as having a expiry date or want to be seen in the context of its date then by all means write blog posts for those content. But don't fall into the trap of writing great content and then leaving it languishing in the archives of your website just because that is the only way you can publish it on your website.\r\n\r\nSecondly, for every other purpose other than as a blog wordpress is half a CMS. It has very few things in it that will serve that purpose. You will have to develop the remaining half of that CMS yourself.\r\n\r\nAttempting to build a complex functionality like a shopping cart and having it manageable using the wordpress administration panel will end up feeling like building the controls to your music player on to your fridge.\r\n\r\nI realized that over time I stopped thinking about what I am creating as a attempt at creating a effective web presence and started moulding my ideas in terms of constructs provided by wordpress. The end result almost always is sub optimal.\r\n\r\nI see resistance to implementing some ideas on the web presences that I come across because they are hard to do in wordpress.\r\n\r\nI have been unconsciously been blocking out some good ideas that would have come to me had I started from first principles rather than being bogged down by what I can do with wordpress.\r\n\r\nThat way building websites on wordpress has been the cause for me to miss a lot of opportunities. It will be a out of place retrofit on the original feature set of a blog creation UI.\r\n\r\nThis is what richard stallman does to maintain his website:\r\n\r\n> \\\"This site is maintained in a very simple way. I edit the pages such as this one manually as HTML. I only know simple HTML; others who know more wrote the parts at the top and bottom of pages, and the more complex formatting on the home page. Volunteer helpers install the political notes every day after receiving the text from me by email. A cron job \\\"rolls over\\\" the political notes page every two months. The photo galleries are generated with this perl script. The search feature on the site is done with this code.\\\"\r\n\r\nAs against running between the user interface and the under the thood code all of what he has been doing is the direct solution to a problem. He needs a page that has his thoughts on software. No CMS. No database. It just works. I wish more of us thought this way. I don't see value in going that basic in how we publish ourselves but starting from \\\"What do I need?\\\" is useful.\r\n\r\nI need a contact form. What are the parts of a bare minimum self hosted solution to achieve this?\r\n\r\nI need a web page that shows a form and a script that will post the form content to me by email or writes to a file or database on the server depending on how I want to receive the entries.\r\n\r\nWith wordpress:\r\n\r\n* Install contact form 7\r\n* Create a page, and then place the tag in that page. Add a wrapper div. Save this mark-up structure to the database.\r\n* Create a new template in your theme for the contact form. Make sure it doesn't have a sidebar and it has a layout and mark-up structure that is appropriate to render the generate contact form code.\r\n* Edit the contact page and then assign the template to that page.\r\n\r\nThe whole thing just feels dirty. I have to run around between the CMS interface and under the hood to make it happen properly.\r\n\r\n## Customizing wordpress is hard\r\n\r\nI have been using wordpress for over 10 years and developing on wordpress for 6 years.\r\n\r\nI have found that making a website that is significantly more than a just a blog is a lot of effort. It involves adapting wordpress to the domain of the web application that you are trying to build. And that is a lot of work.\r\n\r\nIt is far easier to just write the damn thing on a framework instead.\r\n\r\nCreating and maintaining CRUDs in wordpress is painfully hard. It is hard to evolve your entities beyond simple tuples into relationships.\r\n\r\nYou will have to write logic to maintain and detect the version of your schema and migrating them on your own. A painful thing to do from scratch.\r\n\r\nThis to me is the biggest drawback to creating a website using wordpress. That you have to re-invent the wheel every single time and you can only sparingly re-use stuff across projects.\r\n\r\nSomewhere along the way they made the decision to not create any more tables. Now we're left with all kinds of content and meta data and their revisions being in the same tables. You have to read wordpress' source code to figure out which is which. And even if you do, the right way to do that may change over time if you choose to upgrade the wordpress installation (as you should).\r\n\r\nThe rest of the web development world - Rails, Django, Drupal developers are advancing at a breakneck speed while toolset available around wordpress seems to be stuck in the mid 2000's for a long time.\r\n\r\n## Forces you to create aging content\r\n\r\nPatrick McKenzie makes a [very valid point about the blog format](\\\"https://training.kalzumeus.com/newsletters/archive/content-marketing-strategy\\\"):\r\n\r\n> ...that article has a date on it, just the fact of it having a date on it makes it less useful.\r\n> \r\n> I have seen variants of the following conversation happen on Twitter / Reddit / HN / etc multiple times.\r\n> \r\n> \\\"I just got a job offer as a front-end engineer at a Valley company. How do I handle the salary negotiation?\\\"\r\n> \r\n> \\\"Patrick wrote about that here. It is good advice.\\\"\r\n> \r\n> That looks like it was written in 2012\\. Do you have anything more up-to-date?\\\"\r\n> \r\n> History is a pretty wild rollercoaster, but nothing which happened in the interim has suddenly made \\\"Don't negotiate your salary!\\\" or \\\"If you do negotiate your salary, start by naming a nice low number. You can always work your way up later!\\\" into good advice. And yet if you put a date on your work, people immediately assume it gets stale. This is even institutionalized in some forums — Hacker News, for example, will append e.g. \\\"(2012)\\\" to the title of anything published in a different calendar year. If you've got your server logs opened with tail -f (I have weird hobbies, what can I say), you can watch in real time as that date makes the link less likely to be clicked on or commented about.\r\n> \r\n> \\\"But publication dates often provide important context!\\\" Horsepuckey. You can, and should, make the strategic decision that you'll primarily write things which retain their value. (It takes approximately the same amount of work to create great writing which lasts versus creating great writing which ages quickly. Given the choice, unless you're the New York Times and your entire business is built around throwing out some of the world's best writing every day right after breakfast, you should choose to write things which last. After all, you don't write software with the explicit intention that it will suffer bitrot hours after release, now do you?)\r\n> \r\n> If the context were truly important some of the time and not others, people would make the considered decision \\\"Does this post need a publication date?\\\", but nobody does that. Most writing only carries a publication date because that was inserted several years ago into the WordPress template by a designer. The designer likely knows nothing about your company, to say nothing of the instant work. He put in a date because WordPress makes it really easy and because everyone knows that blog posts have dates. He also probably made the decision to make the date front-and-center in the blog post, rather than treating it as minimal-impact metadata and burying it after the main text or putting it in a bots-only header.\\\"\r\n\r\nThe very fact that you have a blog's CMS will force you to reach for themes that are out of the box meant to show a chronological list of posts.\r\n\r\n## The front-end of wordpress websites are terrible\r\n\r\nMoulding the front-end of wordpress websites is like trying to [some hard thing that communicates convolution].\r\n\r\nDon't get me wrong. I am very proficient in doing that. As back-end systems go - whether they are frameworks or CMS, wordpress is the worst of them all in terms of effort involved in\r\n\r\nThe theming framework assumes that you have a single stylesheet file that contains all of your stylesheets and will be loaded in every single page.\r\n\r\nAny organization you bring out to create actual organization will leave you inventing your own templating system that will not be used after you finish that one project.\r\n\r\nThere is no way to directly specify which page gets which CSS. I will have to write code in the page to detect what content type or page I am in to give it the right CSS.\r\n\r\nGood performant front-end shouldn't be something that happens only on e-commerce websites. It should happen on any website anywhere. Is it too much to ask that my website have a 2-3 digit millisecond load time?\r\n\r\n## Should we not use any CMS?\r\n\r\nNot at all.\r\n\r\nDrupal is a good CMS that is good for any purpose and more. It is more suited to being a blog than is wordpress. The only losing factor is the difficulty in updating and the availability of user friendly and functional plugins for the average blogger who fires up a web blog at the whim of the moment\r\n\r\nIn closing, don't let the right way or the available way to do things in wordpress anchor and influence how you end up presenting your content and how you build your audience. Think about it consciously either mould wordpress to meet that presentation of find a tool that allows you to do that easily.\r\n\r\nIf you are serious about having a good web presence, plan to outgrow and migrate away from wordpress eventually.\r\n\r\n**P.S:** I have spelled 'wordpress' this way intentionally. That is not a oversight. Because I don't give a damn about this stupid stockholm syndrome driven peer-shaming attitude that goes around in the wordpress community. I really hope it rustles some jimmies.", show_date: false, url_slug: "creating-websites-with-wordpress-is-bad", html: "<p>Wordpress is the most popular content management system in the world. It runs almost 16% of the web. I can see why that is because it is so easy to set up.</p>\n\n<p>If you are a company that has a developer on board then don&#39;t create any part of your website using wordpress. Use wordpress only if you don&#39;t have a developer on your team and you want a ready made system with pre-built features that you don&#39;t expect to evolve with your needs.</p>\n\n<p>These are my reasons to avoid wordpress as the go to platform when you are considering creating a new website.</p>\n\n<h2>It influences how you present yourself.</h2>\n\n<p>Firstly, wordpress started out as a blogging platform. So there are (appropriate) assumptions about your content (you will write posts), what roles are available and how they are presented (chronologically). It comes with the posts and the page types which are really for chronological content. It does a good job of that.</p>\n\n<p>Something deeply ingrained in the system is the blog being a web-log the way it was back in the early 2000s. The emphasis on wordpress&#39;s presentation is in the chronological presentation of your content. Which is bad.</p>\n\n<p>I would even go so far as to say that even a topical blog in the sense that it is today - should not be created as just a chronological list of posts. There should be cornerstone content that you should be seen out of the context of the time it was posted and stand on its own in your content hierarchy.</p>\n\n<p>If you have chronological content - the content that you consciously endorse as having a expiry date or want to be seen in the context of its date then by all means write blog posts for those content. But don&#39;t fall into the trap of writing great content and then leaving it languishing in the archives of your website just because that is the only way you can publish it on your website.</p>\n\n<p>Secondly, for every other purpose other than as a blog wordpress is half a CMS. It has very few things in it that will serve that purpose. You will have to develop the remaining half of that CMS yourself.</p>\n\n<p>Attempting to build a complex functionality like a shopping cart and having it manageable using the wordpress administration panel will end up feeling like building the controls to your music player on to your fridge.</p>\n\n<p>I realized that over time I stopped thinking about what I am creating as a attempt at creating a effective web presence and started moulding my ideas in terms of constructs provided by wordpress. The end result almost always is sub optimal.</p>\n\n<p>I see resistance to implementing some ideas on the web presences that I come across because they are hard to do in wordpress.</p>\n\n<p>I have been unconsciously been blocking out some good ideas that would have come to me had I started from first principles rather than being bogged down by what I can do with wordpress.</p>\n\n<p>That way building websites on wordpress has been the cause for me to miss a lot of opportunities. It will be a out of place retrofit on the original feature set of a blog creation UI.</p>\n\n<p>This is what richard stallman does to maintain his website:</p>\n\n<blockquote>\n<p>\\&quot;This site is maintained in a very simple way. I edit the pages such as this one manually as HTML. I only know simple HTML; others who know more wrote the parts at the top and bottom of pages, and the more complex formatting on the home page. Volunteer helpers install the political notes every day after receiving the text from me by email. A cron job \\&quot;rolls over\\&quot; the political notes page every two months. The photo galleries are generated with this perl script. The search feature on the site is done with this code.\\&quot;</p>\n</blockquote>\n\n<p>As against running between the user interface and the under the thood code all of what he has been doing is the direct solution to a problem. He needs a page that has his thoughts on software. No CMS. No database. It just works. I wish more of us thought this way. I don&#39;t see value in going that basic in how we publish ourselves but starting from \\&quot;What do I need?\\&quot; is useful.</p>\n\n<p>I need a contact form. What are the parts of a bare minimum self hosted solution to achieve this?</p>\n\n<p>I need a web page that shows a form and a script that will post the form content to me by email or writes to a file or database on the server depending on how I want to receive the entries.</p>\n\n<p>With wordpress:</p>\n\n<ul>\n<li>Install contact form 7</li>\n<li>Create a page, and then place the tag in that page. Add a wrapper div. Save this mark-up structure to the database.</li>\n<li>Create a new template in your theme for the contact form. Make sure it doesn&#39;t have a sidebar and it has a layout and mark-up structure that is appropriate to render the generate contact form code.</li>\n<li>Edit the contact page and then assign the template to that page.</li>\n</ul>\n\n<p>The whole thing just feels dirty. I have to run around between the CMS interface and under the hood to make it happen properly.</p>\n\n<h2>Customizing wordpress is hard</h2>\n\n<p>I have been using wordpress for over 10 years and developing on wordpress for 6 years.</p>\n\n<p>I have found that making a website that is significantly more than a just a blog is a lot of effort. It involves adapting wordpress to the domain of the web application that you are trying to build. And that is a lot of work.</p>\n\n<p>It is far easier to just write the damn thing on a framework instead.</p>\n\n<p>Creating and maintaining CRUDs in wordpress is painfully hard. It is hard to evolve your entities beyond simple tuples into relationships.</p>\n\n<p>You will have to write logic to maintain and detect the version of your schema and migrating them on your own. A painful thing to do from scratch.</p>\n\n<p>This to me is the biggest drawback to creating a website using wordpress. That you have to re-invent the wheel every single time and you can only sparingly re-use stuff across projects.</p>\n\n<p>Somewhere along the way they made the decision to not create any more tables. Now we&#39;re left with all kinds of content and meta data and their revisions being in the same tables. You have to read wordpress&#39; source code to figure out which is which. And even if you do, the right way to do that may change over time if you choose to upgrade the wordpress installation (as you should).</p>\n\n<p>The rest of the web development world - Rails, Django, Drupal developers are advancing at a breakneck speed while toolset available around wordpress seems to be stuck in the mid 2000&#39;s for a long time.</p>\n\n<h2>Forces you to create aging content</h2>\n\n<p>Patrick McKenzie makes a <a href=\"%22https://training.kalzumeus.com/newsletters/archive/content-marketing-strategy%22\">very valid point about the blog format</a>:</p>\n\n<blockquote>\n<p>...that article has a date on it, just the fact of it having a date on it makes it less useful.</p>\n\n<p>I have seen variants of the following conversation happen on Twitter / Reddit / HN / etc multiple times.</p>\n\n<p>\\&quot;I just got a job offer as a front-end engineer at a Valley company. How do I handle the salary negotiation?\\&quot;</p>\n\n<p>\\&quot;Patrick wrote about that here. It is good advice.\\&quot;</p>\n\n<p>That looks like it was written in 2012. Do you have anything more up-to-date?\\&quot;</p>\n\n<p>History is a pretty wild rollercoaster, but nothing which happened in the interim has suddenly made \\&quot;Don&#39;t negotiate your salary!\\&quot; or \\&quot;If you do negotiate your salary, start by naming a nice low number. You can always work your way up later!\\&quot; into good advice. And yet if you put a date on your work, people immediately assume it gets stale. This is even institutionalized in some forums — Hacker News, for example, will append e.g. \\&quot;(2012)\\&quot; to the title of anything published in a different calendar year. If you&#39;ve got your server logs opened with tail -f (I have weird hobbies, what can I say), you can watch in real time as that date makes the link less likely to be clicked on or commented about.</p>\n\n<p>\\&quot;But publication dates often provide important context!\\&quot; Horsepuckey. You can, and should, make the strategic decision that you&#39;ll primarily write things which retain their value. (It takes approximately the same amount of work to create great writing which lasts versus creating great writing which ages quickly. Given the choice, unless you&#39;re the New York Times and your entire business is built around throwing out some of the world&#39;s best writing every day right after breakfast, you should choose to write things which last. After all, you don&#39;t write software with the explicit intention that it will suffer bitrot hours after release, now do you?)</p>\n\n<p>If the context were truly important some of the time and not others, people would make the considered decision \\&quot;Does this post need a publication date?\\&quot;, but nobody does that. Most writing only carries a publication date because that was inserted several years ago into the WordPress template by a designer. The designer likely knows nothing about your company, to say nothing of the instant work. He put in a date because WordPress makes it really easy and because everyone knows that blog posts have dates. He also probably made the decision to make the date front-and-center in the blog post, rather than treating it as minimal-impact metadata and burying it after the main text or putting it in a bots-only header.\\&quot;</p>\n</blockquote>\n\n<p>The very fact that you have a blog&#39;s CMS will force you to reach for themes that are out of the box meant to show a chronological list of posts.</p>\n\n<h2>The front-end of wordpress websites are terrible</h2>\n\n<p>Moulding the front-end of wordpress websites is like trying to [some hard thing that communicates convolution].</p>\n\n<p>Don&#39;t get me wrong. I am very proficient in doing that. As back-end systems go - whether they are frameworks or CMS, wordpress is the worst of them all in terms of effort involved in</p>\n\n<p>The theming framework assumes that you have a single stylesheet file that contains all of your stylesheets and will be loaded in every single page.</p>\n\n<p>Any organization you bring out to create actual organization will leave you inventing your own templating system that will not be used after you finish that one project.</p>\n\n<p>There is no way to directly specify which page gets which CSS. I will have to write code in the page to detect what content type or page I am in to give it the right CSS.</p>\n\n<p>Good performant front-end shouldn&#39;t be something that happens only on e-commerce websites. It should happen on any website anywhere. Is it too much to ask that my website have a 2-3 digit millisecond load time?</p>\n\n<h2>Should we not use any CMS?</h2>\n\n<p>Not at all.</p>\n\n<p>Drupal is a good CMS that is good for any purpose and more. It is more suited to being a blog than is wordpress. The only losing factor is the difficulty in updating and the availability of user friendly and functional plugins for the average blogger who fires up a web blog at the whim of the moment</p>\n\n<p>In closing, don&#39;t let the right way or the available way to do things in wordpress anchor and influence how you end up presenting your content and how you build your audience. Think about it consciously either mould wordpress to meet that presentation of find a tool that allows you to do that easily.</p>\n\n<p>If you are serious about having a good web presence, plan to outgrow and migrate away from wordpress eventually.</p>\n\n<p><strong>P.S:</strong> I have spelled &#39;wordpress&#39; this way intentionally. That is not a oversight. Because I don&#39;t give a damn about this stupid stockholm syndrome driven peer-shaming attitude that goes around in the wordpress community. I really hope it rustles some jimmies.</p>\n"},
  {title: "What Drives Me", content: "\r\nWhat drives me to learn? What has me making software today? I wanted to get what I have noticed about myself in an article. \r\n\r\nI mostly don’t like to participate in Hackathons. Hackathons are almost always a technical pursuit. You hack “about” something. They are not about the end result. They are about the experience of making something. \r\n\r\n## No Hackathons\r\n\r\nMy life is too short to be making the next hackathon application. Hacktahon applications are just one of those things – you make ‘em , then you win the price and then they get thrown away. \r\n\r\nThe next big start-up being created as as result of a hackathon is a romantic narrative that people keep talking about. \r\n\r\nIt can happen. You know what else can happen? You CAN go to a place where they are shooting a movie, volunteer as an extra and out of chance be chosen as an actor for said movie. It is possible. Just that it is unlikely.\r\n\r\nThe building in which the hackathon is being held can get hit by a meteorite. It is one of many things that are possible in the realm of possibility. I am not going to NOT attend it because of that. \r\n\r\nI’m just saying one of many possible unintentional incidental outcomes is not a reason to attend one. \r\n\r\nIf you want to create a start-up you aren’t going to go to a hackathon with the intent of fleshing out your product. You will fail. \r\n\r\nLife is too short to make software that is going to get thrown away. There is a lot of that happening already in our day jobs. I have worked in projects where my consultancy was hired to make software for billion dollar corporations and just thrown away. \r\n\r\nNot that the outcome wasn’t good. It’s just that they can afford to shelf a $400,000 custom made software where for one of the other contractors they hired to do the same thing probably did something that made them like their final product better.  \r\n\r\nPlus, the environment of a hackathon is always so pressured that it doesn’t allow me to freely explore what I am trying to make. \r\n\r\n\r\n## The Next Big Technology\r\n\r\nI am not really that excited by the prospect of learning the next big language or framework or development tool. That is to say I am not avid in finding them out. \r\n\r\nI am however, excited by the next big possibility that opens up because of technology. The new possibilities that open up in technology are interesting to me. I am particularly interested in learning how to make \r\n\r\nI am constantly on the look out for the low hanging fruit – inventions and creations that are a marvelous and ground breaking to a specific industry or market but require just modest or even very little in the way of user technical and financial investment. \r\n\r\nI want to learn machine learning because of the amazing applications that I can think of that will directly benefit me. \r\n\r\nI want to learn how to use Qt C++ so that I can create desktop application products that I can distribute. Because desktop applications are NOT dead. They are very much alive. Desktop applications are the food hold inside the minds pace of the consumer that a lot of companies ignore. \r\n\r\nI don’t know if this is a good thing or not but I think you will never run out of these ideas. Good things to make.  \r\n\r\n## Nothing Like Touching Lives\r\n\r\nThe feeling of having your software touch a lot of people lives and it catapulting you to a new level of connectedness and importance is unparalleled. Especially when the idea is so new and it came out of your mind. \r\n\r\nSure you may argue that most ideas are ideas of the times but being able to come up with it and execute it in a way that it was able to reach and affect so many people’s lives. That is reason enough to feel good about what you’ve made. \r\n\r\nIt is unlike anything else. I would give anything to have it again and keep it.  \r\n\r\nThat is what drives me.\r\n\r\n", show_date: false, url_slug: "what-drives-me", html: "<p>What drives me to learn? What has me making software today? I wanted to get what I have noticed about myself in an article. </p>\n\n<p>I mostly don’t like to participate in Hackathons. Hackathons are almost always a technical pursuit. You hack “about” something. They are not about the end result. They are about the experience of making something. </p>\n\n<h2>No Hackathons</h2>\n\n<p>My life is too short to be making the next hackathon application. Hacktahon applications are just one of those things – you make ‘em , then you win the price and then they get thrown away. </p>\n\n<p>The next big start-up being created as as result of a hackathon is a romantic narrative that people keep talking about. </p>\n\n<p>It can happen. You know what else can happen? You CAN go to a place where they are shooting a movie, volunteer as an extra and out of chance be chosen as an actor for said movie. It is possible. Just that it is unlikely.</p>\n\n<p>The building in which the hackathon is being held can get hit by a meteorite. It is one of many things that are possible in the realm of possibility. I am not going to NOT attend it because of that. </p>\n\n<p>I’m just saying one of many possible unintentional incidental outcomes is not a reason to attend one. </p>\n\n<p>If you want to create a start-up you aren’t going to go to a hackathon with the intent of fleshing out your product. You will fail. </p>\n\n<p>Life is too short to make software that is going to get thrown away. There is a lot of that happening already in our day jobs. I have worked in projects where my consultancy was hired to make software for billion dollar corporations and just thrown away. </p>\n\n<p>Not that the outcome wasn’t good. It’s just that they can afford to shelf a $400,000 custom made software where for one of the other contractors they hired to do the same thing probably did something that made them like their final product better.  </p>\n\n<p>Plus, the environment of a hackathon is always so pressured that it doesn’t allow me to freely explore what I am trying to make. </p>\n\n<h2>The Next Big Technology</h2>\n\n<p>I am not really that excited by the prospect of learning the next big language or framework or development tool. That is to say I am not avid in finding them out. </p>\n\n<p>I am however, excited by the next big possibility that opens up because of technology. The new possibilities that open up in technology are interesting to me. I am particularly interested in learning how to make </p>\n\n<p>I am constantly on the look out for the low hanging fruit – inventions and creations that are a marvelous and ground breaking to a specific industry or market but require just modest or even very little in the way of user technical and financial investment. </p>\n\n<p>I want to learn machine learning because of the amazing applications that I can think of that will directly benefit me. </p>\n\n<p>I want to learn how to use Qt C++ so that I can create desktop application products that I can distribute. Because desktop applications are NOT dead. They are very much alive. Desktop applications are the food hold inside the minds pace of the consumer that a lot of companies ignore. </p>\n\n<p>I don’t know if this is a good thing or not but I think you will never run out of these ideas. Good things to make.  </p>\n\n<h2>Nothing Like Touching Lives</h2>\n\n<p>The feeling of having your software touch a lot of people lives and it catapulting you to a new level of connectedness and importance is unparalleled. Especially when the idea is so new and it came out of your mind. </p>\n\n<p>Sure you may argue that most ideas are ideas of the times but being able to come up with it and execute it in a way that it was able to reach and affect so many people’s lives. That is reason enough to feel good about what you’ve made. </p>\n\n<p>It is unlike anything else. I would give anything to have it again and keep it.  </p>\n\n<p>That is what drives me.</p>\n"},
  {title: "On Stopping The Push Of Web Forward", content: "Recently came across a trending article on HN about [stopping the push of web forward](http://www.quirksmode.org/blog/archives/2015/07/stop_pushing_th.html) and wanted to put my thoughts on the subject in a post. \r\n\r\nThe author assumes that the web is moving forward and new features are being added because there is one singular entity that is championing the choice to move the web forward. \r\n\r\nThat also has the assumption that the browser is being created with the exact intent to help people access the web. Thought that at some level is the intent but Google doesn’t care if you are able to access the web. They didn’t create chrome to do that. \r\n\r\nGoogle created Chrome so they control a powerful browser. Every browser manufacture has a agenda behind creating one - business goals whether to drive more searches and thereby more ad revenue or get more web search usage information. \r\n\r\nOf course those interests will not be met if the product they put out claiming that it is a browser does not work at all. But there is no explicit intention to “create a browser” and start moving things forward. \r\n\r\nThe Motion Forward\r\n===================\r\n\r\nThe motion forward is the creation of web standards and APIs. \r\n\r\nWhy do these standards come into place?\r\n\r\n1. Browser manufacturers trying to aid developers to develop by replacing what they are already doing using libraries and polyfills on top of the existing API natively through new APIs. \r\n\r\n2. The interests of the businesses (and their associates) that create web browsers. For example, VBScript in the browser, ActiveX, DRM support in web browsers. \r\n\r\nSo this notion of 'we are moving the web toward “native”-ness' isn’t really true. That is one of the many things that are happening. \r\n\r\nEven if native-like features are being created the intent may never be to out-native native. The intent is to combine the low barrier for entry in developing and deploying very powerful experiences over the web. Something that is not easily done with native applications. We can't out-native native but we don't want a giant lumbering monolith desktop app to deliver web experiences. \r\n\r\nWe are moving the web forward in many different directions. We are not moving the web towards native-ness as such and it may only be a small emergent facet of how the web is evolving.", show_date: false, url_slug: "stopping-the-push-of-web-forward", html: "<p>Recently came across a trending article on HN about <a href=\"http://www.quirksmode.org/blog/archives/2015/07/stop_pushing_th.html\">stopping the push of web forward</a> and wanted to put my thoughts on the subject in a post. </p>\n\n<p>The author assumes that the web is moving forward and new features are being added because there is one singular entity that is championing the choice to move the web forward. </p>\n\n<p>That also has the assumption that the browser is being created with the exact intent to help people access the web. Thought that at some level is the intent but Google doesn’t care if you are able to access the web. They didn’t create chrome to do that. </p>\n\n<p>Google created Chrome so they control a powerful browser. Every browser manufacture has a agenda behind creating one - business goals whether to drive more searches and thereby more ad revenue or get more web search usage information. </p>\n\n<p>Of course those interests will not be met if the product they put out claiming that it is a browser does not work at all. But there is no explicit intention to “create a browser” and start moving things forward. </p>\n\n<h1>The Motion Forward</h1>\n\n<p>The motion forward is the creation of web standards and APIs. </p>\n\n<p>Why do these standards come into place?</p>\n\n<ol>\n<li><p>Browser manufacturers trying to aid developers to develop by replacing what they are already doing using libraries and polyfills on top of the existing API natively through new APIs. </p></li>\n<li><p>The interests of the businesses (and their associates) that create web browsers. For example, VBScript in the browser, ActiveX, DRM support in web browsers. </p></li>\n</ol>\n\n<p>So this notion of &#39;we are moving the web toward “native”-ness&#39; isn’t really true. That is one of the many things that are happening. </p>\n\n<p>Even if native-like features are being created the intent may never be to out-native native. The intent is to combine the low barrier for entry in developing and deploying very powerful experiences over the web. Something that is not easily done with native applications. We can&#39;t out-native native but we don&#39;t want a giant lumbering monolith desktop app to deliver web experiences. </p>\n\n<p>We are moving the web forward in many different directions. We are not moving the web towards native-ness as such and it may only be a small emergent facet of how the web is evolving.</p>\n"}
])
ContactFormEntry.create!([
  {name: "raj", email: "flarecore@gmail.com", subject: "this is a test subject", message: "this is a test body", ip_address: nil},
  {name: "raj", email: "flarecore@gmail.com", subject: "this is a test subject", message: "this is a test body", ip_address: nil},
  {name: "Raj", email: "flarecore@gmail.com", subject: "Test Subject", message: "This is a test", ip_address: "::1"},
  {name: "raj", email: "flarecore@gmail.com", subject: "this is a test subject", message: "this is a test body", ip_address: nil},
  {name: "Raj", email: "flarecore@gmail.com", subject: "This is a test subject", message: "This is the body", ip_address: "::1"}
])
Snippet.create!([
  {title: "Javascript DOM: How To Be Notified When An Element's Subtree Is Modified", content: "A recent addition to the event model of the modern web browsers is the ability to listen to changes in DOM modifications. This is very useful. \r\n\r\n### When did I use this?\r\n\r\n1. When dealing with recent Javascript frameworks like AngularJs that will not give you a event for when a data-binding DOM manipulation has finished. \r\n1. When writing a workaround for legacy code that I was could not afford or at liberty to change. \r\n\r\nKnowing this is very helpful. This can come in handy in many scenarios. \r\n\r\n\r\nIn an ideal world you wouldn't need to listen to DOM manipulations. In my experience the work around that I implemented using DOM manipulations turned out to be somewhat brittle. But for the times when you know you are the only one editing your code, you should take advantage of it. \r\n\r\nThe more recent browsers, starting with IE9 have these events. \r\n\r\n## Mutation Observation in IE9\r\n\r\nFor IE9 you need to listen to the `DOMSubtreeModified` event. Like so:\r\n\r\n```javascript\r\nvar element = document.querySelector('div.wrapper');\r\nelement.addEventListener(\"DOMSubtreeModified\", callback);\r\nfunction callback() {\r\n  alert(\"You modified the subtree of .wrapper\");\r\n}\r\n```\r\n\r\n`DOMSubtreeModified` does not work in IE11 - the most recent browser. \r\n\r\n## Mutation Observation IE10 onwards\r\n\r\nI wish the days of browser inconsistencies were over as they should be but there are still differences. There is a difference in the API for Mutation observer event in IE9, IE10 and IE11. \r\n\r\n```javascript\r\nvar element = document.querySelector(\"div.wrapper\"),\r\n    options = {\r\n       subtree: true,\r\n       childList: true,\r\n       characterData: false,\r\n       attributes: false\r\n    },\r\n    observer = new MutationObserver(callback);  \r\n    observer.observe(element, options);\r\n\r\n\r\nfunction callback() {\r\n   alert(\"You've modified the subtree of .wrapper\");\r\n}\r\n```\r\n\r\n| Version |                                            API to Use|\r\n| ------- | ------------------------------------------------------- |\r\n|   IE 9 | node.addEventListener(\"DOMSubTreeModified\", callback) | \r\n|   IE10 | node.addEventListener(\"DOMSubTreeModified\", callback) | \r\n|   IE11 | o = new MutationObserver(callback), o.observe(node, opts)                   |\r\n\r\n#### Syntax of the `options` argument\r\n\r\nLook at the official Mozilla DOM for detailed documentation on this: [MutationObserver](https://developer.mozilla.org/en/docs/Web/API/MutationObserver)\r\n\r\n#### Browser support\r\nThe MutationObserver API is supported only in browsers IE11 and above. [Check out browser support for mutation events at Can I Use](http://caniuse.com/#feat=mutationobserver).\r\n\r\n\r\n## Polyfill\r\n\r\nFor a solution that works across all browsers you are left writing verbose `if` conditions just to bind the callback using the appropriate API. You may want to look at using polyfills. At the time I wrote this I wasn't able to find one I could recommend. \r\n\r\n", show_data: false, slug: "dom-event-subtree-modified", html: "<p>A recent addition to the event model of the modern web browsers is the ability to listen to changes in DOM modifications. This is very useful. </p>\n\n<h3>When did I use this?</h3>\n\n<ol>\n<li>When dealing with recent Javascript frameworks like AngularJs that will not give you a event for when a data-binding DOM manipulation has finished. </li>\n<li>When writing a workaround for legacy code that I was could not afford or at liberty to change. </li>\n</ol>\n\n<p>Knowing this is very helpful. This can come in handy in many scenarios. </p>\n\n<p>In an ideal world you wouldn&#39;t need to listen to DOM manipulations. In my experience the work around that I implemented using DOM manipulations turned out to be somewhat brittle. But for the times when you know you are the only one editing your code, you should take advantage of it. </p>\n\n<p>The more recent browsers, starting with IE9 have these events. </p>\n\n<h2>Mutation Observation in IE9</h2>\n\n<p>For IE9 you need to listen to the <code>DOMSubtreeModified</code> event. Like so:</p>\n\n<pre><code class=\"javascript\">var element = document.querySelector(&#39;div.wrapper&#39;);\nelement.addEventListener(&quot;DOMSubtreeModified&quot;, callback);\nfunction callback() {\n  alert(&quot;You modified the subtree of .wrapper&quot;);\n}\n</code></pre>\n\n<p><code>DOMSubtreeModified</code> does not work in IE11 - the most recent browser. </p>\n\n<h2>Mutation Observation IE10 onwards</h2>\n\n<p>I wish the days of browser inconsistencies were over as they should be but there are still differences. There is a difference in the API for Mutation observer event in IE9, IE10 and IE11. </p>\n\n<pre><code class=\"javascript\">var element = document.querySelector(&quot;div.wrapper&quot;),\n    options = {\n       subtree: true,\n       childList: true,\n       characterData: false,\n       attributes: false\n    },\n    observer = new MutationObserver(callback);  \n    observer.observe(element, options);\n\n\nfunction callback() {\n   alert(&quot;You&#39;ve modified the subtree of .wrapper&quot;);\n}\n</code></pre>\n\n<table><thead>\n<tr>\n<th>Version</th>\n<th>API to Use</th>\n</tr>\n</thead><tbody>\n<tr>\n<td>IE 9</td>\n<td>node.addEventListener(&quot;DOMSubTreeModified&quot;, callback)</td>\n</tr>\n<tr>\n<td>IE10</td>\n<td>node.addEventListener(&quot;DOMSubTreeModified&quot;, callback)</td>\n</tr>\n<tr>\n<td>IE11</td>\n<td>o = new MutationObserver(callback), o.observe(node, opts)</td>\n</tr>\n</tbody></table>\n\n<h4>Syntax of the <code>options</code> argument</h4>\n\n<p>Look at the official Mozilla DOM for detailed documentation on this: <a href=\"https://developer.mozilla.org/en/docs/Web/API/MutationObserver\">MutationObserver</a></p>\n\n<h4>Browser support</h4>\n\n<p>The MutationObserver API is supported only in browsers IE11 and above. <a href=\"http://caniuse.com/#feat=mutationobserver\">Check out browser support for mutation events at Can I Use</a>.</p>\n\n<h2>Polyfill</h2>\n\n<p>For a solution that works across all browsers you are left writing verbose <code>if</code> conditions just to bind the callback using the appropriate API. You may want to look at using polyfills. At the time I wrote this I wasn&#39;t able to find one I could recommend. </p>\n"},
  {title: "Grunt: View All Available Tasks", content: "You likely have a tonne of tasks defined in your grunt file. Looking up online on how to see all the tasks, aliases that are available you turned up another grunt task that you have to download and configure. \r\n\r\nYou really don't have to download and install any module. Just type the following in the project root:\r\n\r\n```bash\r\n$ grunt -h \r\n```\r\n\r\nTo view all available tasks. It shows a result set as shown below:\r\n\r\n<span class=\"fill-width-image\">\r\n![List of tasks](https://i.imgur.com/aLSqyGN.jpg)\r\n</span>\r\n\r\n\r\n", show_data: false, slug: "grunt-view-available-tasks", html: "<p>You likely have a tonne of tasks defined in your grunt file. Looking up online on how to see all the tasks, aliases that are available you turned up another grunt task that you have to download and configure. </p>\n\n<p>You really don&#39;t have to download and install any module. Just type the following in the project root:</p>\n\n<pre><code class=\"bash\">$ grunt -h \n</code></pre>\n\n<p>To view all available tasks. It shows a result set as shown below:</p>\n\n<p><span class=\"fill-width-image\">\n<img src=\"https://i.imgur.com/aLSqyGN.jpg\" alt=\"List of tasks\">\n</span></p>\n"},
  {title: "MySQL : How to remove duplicate rows from a table?", content: "The most simplest way to remove duplicate rows from a table using MySQL:\r\n\r\n```SQL\r\nALTER IGNORE TABLE users ADD UNIQUE INDEX (someColumn1, someColumn2);\r\n```\r\n\r\nThis will ensure that the index (someColumn1, someColumn2) is unique across all rows. It will discard duplicates and keep the first instance.\r\n\r\n***Note***: This will work so long as you are using MySQL version < 5.7.4. It will ***NOT*** work on 5.7.4 onwards. \r\n\r\n", show_data: false, slug: "mysql-remove-duplicate-rows", html: "<p>The most simplest way to remove duplicate rows from a table using MySQL:</p>\n\n<pre><code class=\"SQL\">ALTER IGNORE TABLE users ADD UNIQUE INDEX (someColumn1, someColumn2);\n</code></pre>\n\n<p>This will ensure that the index (someColumn1, someColumn2) is unique across all rows. It will discard duplicates and keep the first instance.</p>\n\n<p><strong><em>Note</em></strong>: This will work so long as you are using MySQL version &lt; 5.7.4. It will <strong><em>NOT</em></strong> work on 5.7.4 onwards. </p>\n"},
  {title: "What to do when node-gyp is frozen?", content: "Wait for a few minutes. Really. Wait for a few minutes. \r\n\r\nIt does look like it has crashed and the spinner is really not spinning but it hasn't really crashed. Don't check `brew --config` and configure `xcode`. Just wait. ", show_data: false, slug: "node-gyp-frozen-hanging", html: "<p>Wait for a few minutes. Really. Wait for a few minutes. </p>\n\n<p>It does look like it has crashed and the spinner is really not spinning but it hasn&#39;t really crashed. Don&#39;t check <code>brew --config</code> and configure <code>xcode</code>. Just wait. </p>\n"},
  {title: "Rails: How to order records of a associated model by a specific column?", content: "There are many situations where you need an associated record to always be ordered a certain way. Perhaps you have a associated entity that has a `order` column that you want to use to order when fetching rows of that \r\n\r\nFor our example let's assume that you have a model called `Catalog` which is associated with `Product` which for some reason has to always be ordered. \r\n\r\nYou would do:\r\n\r\n```\r\nclass Product < ActiveRecord::Base\r\n   has_many :products, -> { order '`order` ASC' }\r\nend\r\n```", show_data: false, slug: "activerecord-order-records-by-model", html: "<p>There are many situations where you need an associated record to always be ordered a certain way. Perhaps you have a associated entity that has a <code>order</code> column that you want to use to order when fetching rows of that </p>\n\n<p>For our example let&#39;s assume that you have a model called <code>Catalog</code> which is associated with <code>Product</code> which for some reason has to always be ordered. </p>\n\n<p>You would do:</p>\n\n<pre><code>class Product &lt; ActiveRecord::Base\n   has_many :products, -&gt; { order &#39;`order` ASC&#39; }\nend\n</code></pre>\n"}
])

// Generated by CoffeeScript 1.9.1
(function() {
  var Comparison, Q, _, dataUrlHelper, fs, path, resemble;

  path = require('path');

  _ = require('underscore');

  Q = require('q');

  fs = require('fs');

  resemble = require('resemble').resemble;

  dataUrlHelper = require('./image.dataurl.helper');

  Comparison = (function() {
    function Comparison(imgWithEnvs) {
      this.images = imgWithEnvs;
    }

    Comparison.prototype.diff = function(callback) {
      var defer, fileData, promise, that;
      defer = Q.defer();
      promise = defer.promise.then(callback);
      that = this;
      fileData = _.values(this.images);
      Comparison.compare(fileData[0], fileData[1], function(diffObj) {
        var diffBase64;
        if (diffObj) {
          diffBase64 = dataUrlHelper.toData(diffObj.getImageDataUrl());
          that.images.diff = new Buffer(diffBase64, 'base64');
          _.extend(that, {
            isSameDimensions: diffObj.isSameDimensions,
            misMatchPercentage: Number(diffObj.misMatchPercentage),
            analysisTime: diffObj.analysisTime
          });
          return defer.resolve(that.images.diff);
        }
      });
      return promise;
    };

    Comparison.compare = function(fileAData, fileBData, callback) {
      var defer, promise;
      defer = Q.defer();
      promise = defer.promise.then(callback);
      if (!fileAData && !fileBData) {
        defer.resolve({});
      }
      resemble(fileAData).compareTo(fileBData).onComplete(function(data) {
        return defer.resolve(data);
      });
      return promise;
    };

    return Comparison;

  })();

  module.exports = Comparison;

}).call(this);

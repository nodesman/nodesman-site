// Generated by CoffeeScript 1.9.1
(function() {
  var Viff, durationFormat, imgGen;

  require('./color.helper.js');

  imgGen = require('./image.generator.js');

  Viff = require('./viff');

  durationFormat = function(duration) {
    return (duration / 1000).toFixed(2) + 's';
  };

  module.exports = {
    logBefore: function(cases) {
      return console.log('Viff is taking screenshots...\n');
    },
    logAfterEach: function(_case, duration, fex, tex, exceptions) {
      var drationStr;
      if (exceptions == null) {
        exceptions = [];
      }
      if (fex || tex) {
        exceptions.push({
          fex: fex,
          tex: tex,
          key: _case.key()
        });
        return console.log("  " + (exceptions.length + ')').error + " " + _case.browser.error + " " + (_case.key().error) + " ");
      } else {
        drationStr = ("(" + (durationFormat(duration)) + ")").greyColor;
        return console.log("  - " + _case.browser.info + " " + (_case.key().greyColor) + " " + drationStr);
      }
    },
    logAfter: function(cases, duration, exceptions) {
      var ex, fexMsg, message, ref, ref1, texMsg, title, total;
      if (exceptions == null) {
        exceptions = [];
      }
      console.log("\nDone in " + (durationFormat(duration)) + ", " + (exceptions.length + ' failed.').greyColor + "\n");
      if (total = exceptions.length) {
        while (ex = exceptions.shift()) {
          if (((ref = ex.fex) != null ? ref.message : void 0) != null) {
            fexMsg = ex.fex.message + '\n\n';
          }
          if (((ref1 = ex.tex) != null ? ref1.message : void 0) != null) {
            texMsg = ex.tex.message + '\n\n';
          }
          title = (total - exceptions.length) + ') ' + ex.key + '\n';
          message = ("    " + title + fexMsg.error + texMsg.error).replace(/\n/g, '\n       ');
          console.error(message);
        }
        return console.error('');
      }
    }
  };

}).call(this);
